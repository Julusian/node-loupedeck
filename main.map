{"version":3,"file":"app.js","mappings":";;;;;;;AAAY;;AAEZ,kBAAkB;AAClB,mBAAmB;AACnB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,UAAU;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;ACrJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ,eAAe,mBAAO,CAAC,EAAW;AAClC,gBAAgB,mBAAO,CAAC,GAAS;AACjC;AACA;AACA;AACA;;AAEA,UAAc;AACd,yBAAkB;AAClB,UAAyB;;AAEzB;AACA,yBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;;AAEA;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,UAAyB;AACvC,iDAAiD,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,eAAe;AACxC;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,yBAAyB,QAAQ;AACjC;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,qBAAqB,WAAW,GAAG,IAAI;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,gBAAgB,WAAW,GAAG,IAAI,KAAK,aAAa;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;;AAEA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,KAAK,mDAAmD,cAAc;AACzF,GAAG;AACH;AACA;AACA,+BAA+B,IAAI;AACnC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM,aAAa,SAAS;AACtD;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,SAAS,gBAAgB;AACzB,cAAc,oBAAoB,EAAE,IAAI;AACxC;AACA,YAAY,gBAAgB,EAAE,IAAI;AAClC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,GAAG,SAAS,GAAG,KAAK,qBAAqB,EAAE,EAAE;AACpE,QAAQ;AACR,yBAAyB,GAAG,KAAK,yBAAyB,EAAE,EAAE;AAC9D,mBAAmB,yBAAyB,EAAE,EAAE;AAChD;AACA,MAAM;AACN,oBAAoB,IAAI,EAAE,GAAG,SAAS,IAAI,EAAE,EAAE;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C,cAAc,SAAS,OAAO;AACxE;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,YAAY;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;ACzjEa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0DAA0D,OAAO;AACjE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,SAAS;AACnD;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA,gBAAgB,YAAY;AAC5B;;AAEA;AACA,4DAA4D;AAC5D,gEAAgE;AAChE,oEAAoE;AACpE,wEAAwE;AACxE;AACA,2DAA2D,SAAS;AACpE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,WAAW,SAAS;AACpB,aAAa,cAAc;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,4DAA4D,YAAY;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,cAAc;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,IAA6B;AACjC;AACA;;;;;;;;AC/UA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS,WAAW;;AAEpB;AACA;AACA;AACA,SAAS,WAAW;;AAEpB;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA,SAAS,WAAW;;AAEpB;AACA;AACA,SAAS,UAAU;;AAEnB;AACA;;;;;;;;;ACpFa;AACb;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;;;;;;;;ACda;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB,mBAAO,CAAC,GAAe;AAC5C,oBAAoB,mBAAO,CAAC,GAAW;AACvC,yBAAyB,mBAAO,CAAC,GAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oJAAoJ;AACtL;AACA,gGAAgG,yHAAyH,MAAM,2BAA2B;AAC1P;AACA;AACA,2FAA2F,sHAAsH,MAAM,wBAAwB;AAC/O;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,eAAe,MAAM,sBAAsB;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,mGAAmG;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;;;;;;;;;ACtRF;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;;;;;;;;;ACpBF;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB,mBAAO,CAAC,GAAe;AA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A;;AAEA;AACA,2BAA2B;AAC3B;;;;;;;;;ACba;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B;AAC3B,wBAAwB,mBAAO,CAAC,GAAe;AAC/C,oBAAoB,mBAAO,CAAC,GAAc;AAC1C,eAAe,mBAAO,CAAC,GAAS;AAChC,kBAAkB,mBAAO,CAAC,GAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA,6DAA6D;AAC7D;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0BAA0B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,MAAM;AACtC,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,wBAAwB,MAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mCAAmC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mCAAmC;AACnD,wBAAwB,YAAY;AACpC;AACA;AACA,4BAA4B,WAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,kBAAkB,oBAAoB,GAAG,oBAAoB,GAAG,oBAAoB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kKAAkK,MAAM;AACxK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,MAAM;AAC9B,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iKAAiK,MAAM;AACvK;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,2BAA2B,0CAA0C;AACrE;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,8BAA8B,0CAA0C;AACxE;AACA,CAAC;AACD;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kHAAkH;AACzI,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;ACnea;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B;AAC3B,YAAY,mBAAO,CAAC,GAAI;AACxB,eAAe,mBAAO,CAAC,EAAQ;AAC/B,gBAAgB,mBAAO,CAAC,GAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;;;;;;;AClBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B,GAAG,8BAA8B;AAC5D,oBAAoB,mBAAO,CAAC,GAAc;AAC1C,eAAe,mBAAO,CAAC,EAAQ;AAC/B,eAAe,mBAAO,CAAC,GAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;;;;;;;ACvFa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB,oBAAoB,mBAAO,CAAC,GAAc;AAC1C,eAAe,mBAAO,CAAC,GAAS;AAChC,eAAe,mBAAO,CAAC,GAAQ;AAC/B,kCAAkC,mBAAO,CAAC,GAA2B;AACrE,iBAAiB,mBAAO,CAAC,GAAU;AACnC,gBAAgB,mBAAO,CAAC,GAAS;AACjC,oCAAoC,mBAAO,CAAC,GAA6B;AACzE,gBAAgB,mBAAO,CAAC,GAAS;AACjC;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;AClDa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B;AAC5B,oBAAoB,mBAAO,CAAC,GAAc;AAC1C,eAAe,mBAAO,CAAC,EAAQ;AAC/B,eAAe,mBAAO,CAAC,GAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;;;;;;;;AC7Ca;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B;AAC3B,oBAAoB,mBAAO,CAAC,GAAc;AAC1C,eAAe,mBAAO,CAAC,EAAQ;AAC/B,eAAe,mBAAO,CAAC,GAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;;;;;;;AC7Da;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oCAAoC;AACpC,oBAAoB,mBAAO,CAAC,GAAc;AAC1C,eAAe,mBAAO,CAAC,EAAQ;AAC/B,eAAe,mBAAO,CAAC,GAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;;;;;;;;ACzCa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mCAAmC;AACnC,oBAAoB,mBAAO,CAAC,GAAc;AAC1C,eAAe,mBAAO,CAAC,EAAQ;AAC/B,eAAe,mBAAO,CAAC,GAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;;;;;;;;AC7Da;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iCAAiC;AACjC,wBAAwB,mBAAO,CAAC,GAAe;AAC/C;AACA;AACA,iCAAiC;AACjC;;;;;;;;ACPa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB,GAAG,qBAAqB,GAAG,oBAAoB,GAAG,0BAA0B;AACjG,oBAAoB,mBAAO,CAAC,GAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,mDAAmD,cAAc,WAAW,2BAA2B;AACvG;AACA,mDAAmD,eAAe,WAAW,+BAA+B;AAC5G;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,OAAO;AAC7D;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;;;;;;;ACxEa;AACb;AACA;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB,GAAG,qBAAqB,GAAG,wBAAwB;AACrE,mBAAmB,mBAAO,CAAC,GAA+B;AAC1D,iBAAiB,mBAAO,CAAC,GAAU;AACnC,aAAa,mBAAO,CAAC,GAAiB;AACtC;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,eAAe,GAAG,gBAAgB;AAC1D;AACA;AACA;AACA,+BAA+B,qBAAqB,GAAG,sBAAsB;AAC7E,KAAK;AACL;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA,kBAAkB;AAClB;;;;;;;;;AC9Ea;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oCAAoC;AACpC,eAAe,mBAAO,CAAC,GAAiB;AACxC,mBAAmB,mBAAO,CAAC,GAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,wBAAwB,cAAc;AACtC;AACA,oDAAoD,MAAM;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mCAAmC,MAAM;AACzC;AACA,+DAA+D,0BAA0B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA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","sources":["webpack:///../../../node_modules/base64-js/index.js","webpack:///../../../node_modules/buffer/index.js","webpack:///../../../node_modules/eventemitter3/index.js","webpack:///../../../node_modules/ieee754/index.js","webpack:///../../../node_modules/p-finally/index.js","webpack:///../../../node_modules/p-queue/dist/index.js","webpack:///../../../node_modules/p-queue/dist/lower-bound.js","webpack:///../../../node_modules/p-queue/dist/priority-queue.js","webpack:///../../../node_modules/p-timeout/index.js","webpack:///./demo/fill-when-pressed.ts","webpack:///./demo/rapid-fill.ts","webpack:///../../core/dist/constants.js","webpack:///../../core/dist/events.js","webpack:///../../core/dist/index.js","webpack:///../../core/dist/info.js","webpack:///../../core/dist/internal.js","webpack:///../../core/dist/models/base.js","webpack:///../../core/dist/models/ct-v1.js","webpack:///../../core/dist/models/ct-v2.js","webpack:///../../core/dist/models/list.js","webpack:///../../core/dist/models/live-s.js","webpack:///../../core/dist/models/live.js","webpack:///../../core/dist/models/razer-stream-controller-x.js","webpack:///../../core/dist/models/razer-stream-controller.js","webpack:///../../core/dist/serial.js","webpack:///../../core/dist/util.js","webpack:///../../web/dist/index.js","webpack:///../../web/dist/serial.js","webpack:///webpack/bootstrap","webpack:///./app.ts"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\nmodule.exports = (promise, onFinally) => {\n\tonFinally = onFinally || (() => {});\n\n\treturn promise.then(\n\t\tval => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => val),\n\t\terr => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => {\n\t\t\tthrow err;\n\t\t})\n\t);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst EventEmitter = require(\"eventemitter3\");\nconst p_timeout_1 = require(\"p-timeout\");\nconst priority_queue_1 = require(\"./priority-queue\");\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst empty = () => { };\nconst timeoutError = new p_timeout_1.TimeoutError();\n/**\nPromise queue with concurrency control.\n*/\nclass PQueue extends EventEmitter {\n    constructor(options) {\n        var _a, _b, _c, _d;\n        super();\n        this._intervalCount = 0;\n        this._intervalEnd = 0;\n        this._pendingCount = 0;\n        this._resolveEmpty = empty;\n        this._resolveIdle = empty;\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        options = Object.assign({ carryoverConcurrencyCount: false, intervalCap: Infinity, interval: 0, concurrency: Infinity, autoStart: true, queueClass: priority_queue_1.default }, options);\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(_b = (_a = options.intervalCap) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : ''}\\` (${typeof options.intervalCap})`);\n        }\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(_d = (_c = options.interval) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''}\\` (${typeof options.interval})`);\n        }\n        this._carryoverConcurrencyCount = options.carryoverConcurrencyCount;\n        this._isIntervalIgnored = options.intervalCap === Infinity || options.interval === 0;\n        this._intervalCap = options.intervalCap;\n        this._interval = options.interval;\n        this._queue = new options.queueClass();\n        this._queueClass = options.queueClass;\n        this.concurrency = options.concurrency;\n        this._timeout = options.timeout;\n        this._throwOnTimeout = options.throwOnTimeout === true;\n        this._isPaused = options.autoStart === false;\n    }\n    get _doesIntervalAllowAnother() {\n        return this._isIntervalIgnored || this._intervalCount < this._intervalCap;\n    }\n    get _doesConcurrentAllowAnother() {\n        return this._pendingCount < this._concurrency;\n    }\n    _next() {\n        this._pendingCount--;\n        this._tryToStartAnother();\n        this.emit('next');\n    }\n    _resolvePromises() {\n        this._resolveEmpty();\n        this._resolveEmpty = empty;\n        if (this._pendingCount === 0) {\n            this._resolveIdle();\n            this._resolveIdle = empty;\n            this.emit('idle');\n        }\n    }\n    _onResumeInterval() {\n        this._onInterval();\n        this._initializeIntervalIfNeeded();\n        this._timeoutId = undefined;\n    }\n    _isIntervalPaused() {\n        const now = Date.now();\n        if (this._intervalId === undefined) {\n            const delay = this._intervalEnd - now;\n            if (delay < 0) {\n                // Act as the interval was done\n                // We don't need to resume it here because it will be resumed on line 160\n                this._intervalCount = (this._carryoverConcurrencyCount) ? this._pendingCount : 0;\n            }\n            else {\n                // Act as the interval is pending\n                if (this._timeoutId === undefined) {\n                    this._timeoutId = setTimeout(() => {\n                        this._onResumeInterval();\n                    }, delay);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    _tryToStartAnother() {\n        if (this._queue.size === 0) {\n            // We can clear the interval (\"pause\")\n            // Because we can redo it later (\"resume\")\n            if (this._intervalId) {\n                clearInterval(this._intervalId);\n            }\n            this._intervalId = undefined;\n            this._resolvePromises();\n            return false;\n        }\n        if (!this._isPaused) {\n            const canInitializeInterval = !this._isIntervalPaused();\n            if (this._doesIntervalAllowAnother && this._doesConcurrentAllowAnother) {\n                const job = this._queue.dequeue();\n                if (!job) {\n                    return false;\n                }\n                this.emit('active');\n                job();\n                if (canInitializeInterval) {\n                    this._initializeIntervalIfNeeded();\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    _initializeIntervalIfNeeded() {\n        if (this._isIntervalIgnored || this._intervalId !== undefined) {\n            return;\n        }\n        this._intervalId = setInterval(() => {\n            this._onInterval();\n        }, this._interval);\n        this._intervalEnd = Date.now() + this._interval;\n    }\n    _onInterval() {\n        if (this._intervalCount === 0 && this._pendingCount === 0 && this._intervalId) {\n            clearInterval(this._intervalId);\n            this._intervalId = undefined;\n        }\n        this._intervalCount = this._carryoverConcurrencyCount ? this._pendingCount : 0;\n        this._processQueue();\n    }\n    /**\n    Executes all queued functions until it reaches the limit.\n    */\n    _processQueue() {\n        // eslint-disable-next-line no-empty\n        while (this._tryToStartAnother()) { }\n    }\n    get concurrency() {\n        return this._concurrency;\n    }\n    set concurrency(newConcurrency) {\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\n        }\n        this._concurrency = newConcurrency;\n        this._processQueue();\n    }\n    /**\n    Adds a sync or async task to the queue. Always returns a promise.\n    */\n    async add(fn, options = {}) {\n        return new Promise((resolve, reject) => {\n            const run = async () => {\n                this._pendingCount++;\n                this._intervalCount++;\n                try {\n                    const operation = (this._timeout === undefined && options.timeout === undefined) ? fn() : p_timeout_1.default(Promise.resolve(fn()), (options.timeout === undefined ? this._timeout : options.timeout), () => {\n                        if (options.throwOnTimeout === undefined ? this._throwOnTimeout : options.throwOnTimeout) {\n                            reject(timeoutError);\n                        }\n                        return undefined;\n                    });\n                    resolve(await operation);\n                }\n                catch (error) {\n                    reject(error);\n                }\n                this._next();\n            };\n            this._queue.enqueue(run, options);\n            this._tryToStartAnother();\n            this.emit('add');\n        });\n    }\n    /**\n    Same as `.add()`, but accepts an array of sync or async functions.\n\n    @returns A promise that resolves when all functions are resolved.\n    */\n    async addAll(functions, options) {\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\n    }\n    /**\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\n    */\n    start() {\n        if (!this._isPaused) {\n            return this;\n        }\n        this._isPaused = false;\n        this._processQueue();\n        return this;\n    }\n    /**\n    Put queue execution on hold.\n    */\n    pause() {\n        this._isPaused = true;\n    }\n    /**\n    Clear the queue.\n    */\n    clear() {\n        this._queue = new this._queueClass();\n    }\n    /**\n    Can be called multiple times. Useful if you for example add additional items at a later time.\n\n    @returns A promise that settles when the queue becomes empty.\n    */\n    async onEmpty() {\n        // Instantly resolve if the queue is empty\n        if (this._queue.size === 0) {\n            return;\n        }\n        return new Promise(resolve => {\n            const existingResolve = this._resolveEmpty;\n            this._resolveEmpty = () => {\n                existingResolve();\n                resolve();\n            };\n        });\n    }\n    /**\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\n\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\n    */\n    async onIdle() {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (this._pendingCount === 0 && this._queue.size === 0) {\n            return;\n        }\n        return new Promise(resolve => {\n            const existingResolve = this._resolveIdle;\n            this._resolveIdle = () => {\n                existingResolve();\n                resolve();\n            };\n        });\n    }\n    /**\n    Size of the queue.\n    */\n    get size() {\n        return this._queue.size;\n    }\n    /**\n    Size of the queue, filtered by the given options.\n\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\n    */\n    sizeBy(options) {\n        // eslint-disable-next-line unicorn/no-fn-reference-in-iterator\n        return this._queue.filter(options).length;\n    }\n    /**\n    Number of pending promises.\n    */\n    get pending() {\n        return this._pendingCount;\n    }\n    /**\n    Whether the queue is currently paused.\n    */\n    get isPaused() {\n        return this._isPaused;\n    }\n    get timeout() {\n        return this._timeout;\n    }\n    /**\n    Set the timeout for future operations.\n    */\n    set timeout(milliseconds) {\n        this._timeout = milliseconds;\n    }\n}\nexports.default = PQueue;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nfunction lowerBound(array, value, comparator) {\n    let first = 0;\n    let count = array.length;\n    while (count > 0) {\n        const step = (count / 2) | 0;\n        let it = first + step;\n        if (comparator(array[it], value) <= 0) {\n            first = ++it;\n            count -= step + 1;\n        }\n        else {\n            count = step;\n        }\n    }\n    return first;\n}\nexports.default = lowerBound;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst lower_bound_1 = require(\"./lower-bound\");\nclass PriorityQueue {\n    constructor() {\n        this._queue = [];\n    }\n    enqueue(run, options) {\n        options = Object.assign({ priority: 0 }, options);\n        const element = {\n            priority: options.priority,\n            run\n        };\n        if (this.size && this._queue[this.size - 1].priority >= options.priority) {\n            this._queue.push(element);\n            return;\n        }\n        const index = lower_bound_1.default(this._queue, element, (a, b) => b.priority - a.priority);\n        this._queue.splice(index, 0, element);\n    }\n    dequeue() {\n        const item = this._queue.shift();\n        return item === null || item === void 0 ? void 0 : item.run;\n    }\n    filter(options) {\n        return this._queue.filter((element) => element.priority === options.priority).map((element) => element.run);\n    }\n    get size() {\n        return this._queue.length;\n    }\n}\nexports.default = PriorityQueue;\n","'use strict';\n\nconst pFinally = require('p-finally');\n\nclass TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\nconst pTimeout = (promise, milliseconds, fallback) => new Promise((resolve, reject) => {\n\tif (typeof milliseconds !== 'number' || milliseconds < 0) {\n\t\tthrow new TypeError('Expected `milliseconds` to be a positive number');\n\t}\n\n\tif (milliseconds === Infinity) {\n\t\tresolve(promise);\n\t\treturn;\n\t}\n\n\tconst timer = setTimeout(() => {\n\t\tif (typeof fallback === 'function') {\n\t\t\ttry {\n\t\t\t\tresolve(fallback());\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = typeof fallback === 'string' ? fallback : `Promise timed out after ${milliseconds} milliseconds`;\n\t\tconst timeoutError = fallback instanceof Error ? fallback : new TimeoutError(message);\n\n\t\tif (typeof promise.cancel === 'function') {\n\t\t\tpromise.cancel();\n\t\t}\n\n\t\treject(timeoutError);\n\t}, milliseconds);\n\n\t// TODO: Use native `finally` keyword when targeting Node.js 10\n\tpFinally(\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\tpromise.then(resolve, reject),\n\t\t() => {\n\t\t\tclearTimeout(timer);\n\t\t}\n\t);\n});\n\nmodule.exports = pTimeout;\n// TODO: Remove this for the next major release\nmodule.exports.default = pTimeout;\n\nmodule.exports.TimeoutError = TimeoutError;\n","import {\n\tLoupedeckBufferFormat,\n\tLoupedeckControlInfo,\n\tLoupedeckDevice,\n\tLoupedeckDisplayId,\n\tLoupedeckModelId,\n\tLoupedeckTouchEventData,\n\tRGBColor,\n} from '@loupedeck/web'\nimport { Demo } from './demo'\n\nfunction stringifyInfo(info: LoupedeckControlInfo): string {\n\treturn `${info.type}-${info.index}`\n}\n\nconst colorRed: RGBColor = { red: 255, green: 0, blue: 0 }\nconst colorBlack: RGBColor = { red: 0, green: 0, blue: 0 }\n\nconst bufferRed = Buffer.alloc(80 * 80 * 3, Buffer.from([255, 0, 0]))\nconst bufferBlack = Buffer.alloc(80 * 80 * 3)\n\nexport class FillWhenPressedDemo implements Demo {\n\tprivate pressed: string[] = []\n\tprivate touchBoxes = new Set<number>()\n\tprivate touchingLeft = false\n\tprivate touchingRight = false\n\n\tpublic async start(device: LoupedeckDevice): Promise<void> {\n\t\tawait device.blankDevice(true, false)\n\t}\n\tpublic async stop(device: LoupedeckDevice): Promise<void> {\n\t\tawait device.blankDevice(true, false)\n\t}\n\tpublic async controlDown(device: LoupedeckDevice, info: LoupedeckControlInfo): Promise<void> {\n\t\tconst id = stringifyInfo(info)\n\t\tif (this.pressed.indexOf(id) === -1) {\n\t\t\tthis.pressed.push(id)\n\n\t\t\tif (device.modelId === LoupedeckModelId.RazerStreamControllerX) {\n\t\t\t\tawait device.drawKeyBuffer(info.index, bufferRed, LoupedeckBufferFormat.RGB)\n\t\t\t} else {\n\t\t\t\tawait device.setButtonColor({ id: info.index, ...colorRed })\n\t\t\t}\n\t\t}\n\t}\n\tpublic async controlUp(device: LoupedeckDevice, info: LoupedeckControlInfo): Promise<void> {\n\t\tconst id = stringifyInfo(info)\n\t\tconst index = this.pressed.indexOf(id)\n\t\tif (index !== -1) {\n\t\t\tthis.pressed.splice(index, 1)\n\n\t\t\tif (device.modelId === LoupedeckModelId.RazerStreamControllerX) {\n\t\t\t\tawait device.drawKeyBuffer(info.index, bufferBlack, LoupedeckBufferFormat.RGB)\n\t\t\t} else {\n\t\t\t\tawait device.setButtonColor({ id: info.index, ...colorBlack })\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async controlRotate(_device: LoupedeckDevice, _info: LoupedeckControlInfo, _delta: number): Promise<void> {\n\t\t// Ignored\n\t}\n\n\tpublic async touchStart(device: LoupedeckDevice, event: LoupedeckTouchEventData): Promise<void> {\n\t\treturn this.touchMove(device, event)\n\t}\n\tpublic async touchMove(device: LoupedeckDevice, event: LoupedeckTouchEventData): Promise<void> {\n\t\tconst ps: Array<Promise<void>> = []\n\n\t\tconst newIds = new Set<number>()\n\t\tlet leftPercent = 0\n\t\tlet rightPercent = 0\n\n\t\tfor (const touch of event.touches) {\n\t\t\tif (touch.target.screen === LoupedeckDisplayId.Center && touch.target.key !== undefined) {\n\t\t\t\tnewIds.add(touch.target.key)\n\n\t\t\t\tif (!this.touchBoxes.has(touch.target.key)) {\n\t\t\t\t\tthis.touchBoxes.add(touch.target.key)\n\n\t\t\t\t\tps.push(device.drawKeyBuffer(touch.target.key, bufferRed, LoupedeckBufferFormat.RGB))\n\t\t\t\t}\n\t\t\t} else if (touch.target.screen === LoupedeckDisplayId.Left && device.displayLeftStrip) {\n\t\t\t\tconst percent = touch.y / device.displayLeftStrip.height\n\t\t\t\tleftPercent = Math.max(leftPercent, percent)\n\t\t\t} else if (touch.target.screen === LoupedeckDisplayId.Right && device.displayRightStrip) {\n\t\t\t\tconst percent = touch.y / device.displayRightStrip.height\n\t\t\t\trightPercent = Math.max(rightPercent, percent)\n\t\t\t}\n\t\t}\n\n\t\tfor (const key of this.touchBoxes) {\n\t\t\tif (!newIds.has(key)) {\n\t\t\t\tthis.touchBoxes.delete(key)\n\n\t\t\t\tps.push(device.drawKeyBuffer(key, bufferBlack, LoupedeckBufferFormat.RGB))\n\t\t\t}\n\t\t}\n\n\t\tif (device.displayLeftStrip && (leftPercent > 0 || this.touchingLeft)) {\n\t\t\tthis.touchingLeft = leftPercent > 0\n\n\t\t\tps.push(\n\t\t\t\tdevice.drawSolidColour(\n\t\t\t\t\tLoupedeckDisplayId.Left,\n\t\t\t\t\t{ red: Math.round(255 * leftPercent), green: 0, blue: 0 },\n\t\t\t\t\tdevice.displayLeftStrip.width,\n\t\t\t\t\tdevice.displayLeftStrip.height,\n\t\t\t\t\t0,\n\t\t\t\t\t0\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\n\t\tif (device.displayRightStrip && (rightPercent > 0 || this.touchingRight)) {\n\t\t\tthis.touchingRight = rightPercent > 0\n\n\t\t\tps.push(\n\t\t\t\tdevice.drawSolidColour(\n\t\t\t\t\tLoupedeckDisplayId.Right,\n\t\t\t\t\t{ red: Math.round(255 * rightPercent), green: 0, blue: 0 },\n\t\t\t\t\tdevice.displayRightStrip.width,\n\t\t\t\t\tdevice.displayRightStrip.height,\n\t\t\t\t\t0,\n\t\t\t\t\t0\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\n\t\tawait Promise.allSettled(ps)\n\t}\n\tpublic async touchEnd(device: LoupedeckDevice, event: LoupedeckTouchEventData): Promise<void> {\n\t\treturn this.touchMove(device, event)\n\t}\n}\n","import {\n\tLoupedeckControlInfo,\n\tLoupedeckDevice,\n\tLoupedeckDisplayId,\n\tLoupedeckTouchEventData,\n\tRGBColor,\n} from '@loupedeck/web'\nimport { Demo } from './demo'\n\nfunction getRandomIntInclusive(min: number, max: number) {\n\tmin = Math.ceil(min)\n\tmax = Math.floor(max)\n\treturn Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport class RapidFillDemo implements Demo {\n\tprivate interval: number | undefined\n\tprivate running: Promise<void[]> | undefined\n\n\tpublic async start(device: LoupedeckDevice): Promise<void> {\n\t\tif (!this.interval) {\n\t\t\tconst doThing = async () => {\n\t\t\t\tif (!this.running) {\n\t\t\t\t\tconst color: RGBColor = {\n\t\t\t\t\t\tred: getRandomIntInclusive(0, 255),\n\t\t\t\t\t\tgreen: getRandomIntInclusive(0, 255),\n\t\t\t\t\t\tblue: getRandomIntInclusive(0, 255),\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log('Filling with rgb(%d, %d, %d)', color.red, color.green, color.blue)\n\n\t\t\t\t\tthis.running = Promise.all([\n\t\t\t\t\t\tdevice.drawSolidColour(\n\t\t\t\t\t\t\tLoupedeckDisplayId.Center,\n\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\tdevice.displayMain.width,\n\t\t\t\t\t\t\tdevice.displayMain.height,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t0\n\t\t\t\t\t\t),\n\t\t\t\t\t\tdevice.displayLeftStrip\n\t\t\t\t\t\t\t? device.drawSolidColour(\n\t\t\t\t\t\t\t\t\tLoupedeckDisplayId.Left,\n\t\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t\tdevice.displayLeftStrip.width,\n\t\t\t\t\t\t\t\t\tdevice.displayLeftStrip.height,\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t0\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\tdevice.displayRightStrip\n\t\t\t\t\t\t\t? device.drawSolidColour(\n\t\t\t\t\t\t\t\t\tLoupedeckDisplayId.Right,\n\t\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t\tdevice.displayRightStrip.width,\n\t\t\t\t\t\t\t\t\tdevice.displayRightStrip.height,\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t0\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t// TODO fix\n\t\t\t\t\t\t// device.setButtonColor(\n\t\t\t\t\t\t// \t...(device.controls\n\t\t\t\t\t\t// \t\t.map((control) => {\n\t\t\t\t\t\t// \t\t\tif (control.type === LoupedeckControlType.Button) {\n\t\t\t\t\t\t// \t\t\t\treturn { id: control.index, ...color }\n\t\t\t\t\t\t// \t\t\t} else {\n\t\t\t\t\t\t// \t\t\t\treturn undefined\n\t\t\t\t\t\t// \t\t\t}\n\t\t\t\t\t\t// \t\t})\n\t\t\t\t\t\t// \t\t.filter((c) => !!c) as any[])\n\t\t\t\t\t\t// ),\n\t\t\t\t\t])\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.running\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tthis.running = undefined\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.interval = window.setInterval(() => {\n\t\t\t\tdoThing().catch((e) => console.log(e))\n\t\t\t}, 1000 / 5)\n\t\t}\n\t}\n\tpublic async stop(device: LoupedeckDevice): Promise<void> {\n\t\tif (this.interval) {\n\t\t\twindow.clearInterval(this.interval)\n\t\t\tthis.interval = undefined\n\t\t}\n\t\tawait this.running\n\t\tawait device.blankDevice(true, true)\n\t}\n\n\tpublic async controlDown(_device: LoupedeckDevice, _info: LoupedeckControlInfo): Promise<void> {\n\t\t// Nothing to do\n\t}\n\tpublic async controlUp(_device: LoupedeckDevice, _info: LoupedeckControlInfo): Promise<void> {\n\t\t// Nothing to do\n\t}\n\tpublic async controlRotate(_device: LoupedeckDevice, _info: LoupedeckControlInfo, _delta: number): Promise<void> {\n\t\t// Nothing to do\n\t}\n\tpublic async touchStart(_device: LoupedeckDevice, _event: LoupedeckTouchEventData): Promise<void> {\n\t\t// Nothing to do\n\t}\n\tpublic async touchMove(_device: LoupedeckDevice, _event: LoupedeckTouchEventData): Promise<void> {\n\t\t// Nothing to do\n\t}\n\tpublic async touchEnd(_device: LoupedeckDevice, _event: LoupedeckTouchEventData): Promise<void> {\n\t\t// Nothing to do\n\t}\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoupedeckBufferFormat = exports.DisplayRightEncodedId = exports.DisplayCenterEncodedId = exports.DisplayLeftEncodedId = exports.DisplayWheelEncodedId = exports.DisplayMainEncodedId = exports.LoupedeckDisplayId = exports.LoupedeckVibratePattern = exports.LoupedeckControlType = exports.VendorIdRazer = exports.VendorIdLoupedeck = void 0;\nexports.VendorIdLoupedeck = 0x2ec2;\nexports.VendorIdRazer = 0x1532;\nvar LoupedeckControlType;\n(function (LoupedeckControlType) {\n    LoupedeckControlType[\"Button\"] = \"button\";\n    LoupedeckControlType[\"Rotary\"] = \"rotary\";\n})(LoupedeckControlType = exports.LoupedeckControlType || (exports.LoupedeckControlType = {}));\nvar LoupedeckVibratePattern;\n(function (LoupedeckVibratePattern) {\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"SHORT\"] = 1] = \"SHORT\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"MEDIUM\"] = 10] = \"MEDIUM\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"LONG\"] = 15] = \"LONG\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"LOW\"] = 49] = \"LOW\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"SHORT_LOW\"] = 50] = \"SHORT_LOW\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"SHORT_LOWER\"] = 51] = \"SHORT_LOWER\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"LOWER\"] = 64] = \"LOWER\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"LOWEST\"] = 65] = \"LOWEST\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"DESCEND_SLOW\"] = 70] = \"DESCEND_SLOW\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"DESCEND_MED\"] = 71] = \"DESCEND_MED\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"DESCEND_FAST\"] = 72] = \"DESCEND_FAST\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"ASCEND_SLOW\"] = 82] = \"ASCEND_SLOW\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"ASCEND_MED\"] = 83] = \"ASCEND_MED\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"ASCEND_FAST\"] = 88] = \"ASCEND_FAST\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"REV_SLOWEST\"] = 94] = \"REV_SLOWEST\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"REV_SLOW\"] = 95] = \"REV_SLOW\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"REV_MED\"] = 96] = \"REV_MED\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"REV_FAST\"] = 97] = \"REV_FAST\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"REV_FASTER\"] = 98] = \"REV_FASTER\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"REV_FASTEST\"] = 99] = \"REV_FASTEST\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"RISE_FALL\"] = 106] = \"RISE_FALL\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"BUZZ\"] = 112] = \"BUZZ\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"RUMBLE5\"] = 119] = \"RUMBLE5\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"RUMBLE4\"] = 120] = \"RUMBLE4\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"RUMBLE3\"] = 121] = \"RUMBLE3\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"RUMBLE2\"] = 122] = \"RUMBLE2\";\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"RUMBLE1\"] = 123] = \"RUMBLE1\";\n    /**\n     *  10 sec high freq (!)\n     */\n    LoupedeckVibratePattern[LoupedeckVibratePattern[\"VERY_LONG\"] = 118] = \"VERY_LONG\";\n})(LoupedeckVibratePattern = exports.LoupedeckVibratePattern || (exports.LoupedeckVibratePattern = {}));\nvar LoupedeckDisplayId;\n(function (LoupedeckDisplayId) {\n    LoupedeckDisplayId[\"Left\"] = \"left\";\n    LoupedeckDisplayId[\"Center\"] = \"center\";\n    LoupedeckDisplayId[\"Right\"] = \"right\";\n    LoupedeckDisplayId[\"Wheel\"] = \"wheel\";\n})(LoupedeckDisplayId = exports.LoupedeckDisplayId || (exports.LoupedeckDisplayId = {}));\nexports.DisplayMainEncodedId = Buffer.from([0x00, 0x4d]);\nexports.DisplayWheelEncodedId = Buffer.from([0x00, 0x57]);\nexports.DisplayLeftEncodedId = Buffer.from([0x00, 0x4c]);\nexports.DisplayCenterEncodedId = Buffer.from([0x00, 0x41]);\nexports.DisplayRightEncodedId = Buffer.from([0x00, 0x52]);\nvar LoupedeckBufferFormat;\n(function (LoupedeckBufferFormat) {\n    LoupedeckBufferFormat[\"RGB\"] = \"rgb\";\n})(LoupedeckBufferFormat = exports.LoupedeckBufferFormat || (exports.LoupedeckBufferFormat = {}));\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=events.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./constants\"), exports);\n__exportStar(require(\"./events\"), exports);\n__exportStar(require(\"./info\"), exports);\n__exportStar(require(\"./serial\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoupedeckModelId = void 0;\nvar LoupedeckModelId;\n(function (LoupedeckModelId) {\n    LoupedeckModelId[\"LoupedeckCt\"] = \"loupedeck-ct\";\n    LoupedeckModelId[\"LoupedeckCtV1\"] = \"loupedeck-ct-v1\";\n    LoupedeckModelId[\"LoupedeckLive\"] = \"loupedeck-live\";\n    LoupedeckModelId[\"LoupedeckLiveS\"] = \"loupedeck-live-s\";\n    LoupedeckModelId[\"RazerStreamController\"] = \"razer-stream-controller\";\n    LoupedeckModelId[\"RazerStreamControllerX\"] = \"razer-stream-controller-x\";\n})(LoupedeckModelId = exports.LoupedeckModelId || (exports.LoupedeckModelId = {}));\n//# sourceMappingURL=info.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WS_UPGRADE_RESPONSE = exports.WS_UPGRADE_HEADER = exports.DEVICE_MODELS = void 0;\nvar list_1 = require(\"./models/list\");\nObject.defineProperty(exports, \"DEVICE_MODELS\", { enumerable: true, get: function () { return list_1.DEVICE_MODELS; } });\nexports.WS_UPGRADE_HEADER = Buffer.from(`GET /index.html\nHTTP/1.1\nConnection: Upgrade\nUpgrade: websocket\nSec-WebSocket-Key: 123abc\n\n`);\nexports.WS_UPGRADE_RESPONSE = 'HTTP/1.1';\n//# sourceMappingURL=internal.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _LoupedeckDeviceBase_instances, _LoupedeckDeviceBase_touches, _LoupedeckDeviceBase_connection, _LoupedeckDeviceBase_pendingTransactions, _LoupedeckDeviceBase_nextTransactionId, _LoupedeckDeviceBase_sendQueue, _LoupedeckDeviceBase_getDisplay, _LoupedeckDeviceBase_cleanupPendingPromises, _LoupedeckDeviceBase_onMessage, _LoupedeckDeviceBase_onPress, _LoupedeckDeviceBase_onRotate, _LoupedeckDeviceBase_createTouch, _LoupedeckDeviceBase_runInQueueIfEnabled, _LoupedeckDeviceBase_sendAndWaitIfRequired, _LoupedeckDeviceBase_sendAndWaitForResult, _LoupedeckDeviceBase_sendCommand, _LoupedeckDeviceBase_waitForTransaction;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoupedeckDeviceBase = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst constants_1 = require(\"../constants\");\nconst util_1 = require(\"../util\");\nconst p_queue_1 = require(\"p-queue\");\nvar CommandIds;\n(function (CommandIds) {\n    CommandIds[CommandIds[\"SetColour\"] = 2] = \"SetColour\";\n    CommandIds[CommandIds[\"GetSerialNumber\"] = 3] = \"GetSerialNumber\";\n    CommandIds[CommandIds[\"GetVersion\"] = 7] = \"GetVersion\";\n    CommandIds[CommandIds[\"SetBrightness\"] = 9] = \"SetBrightness\";\n    CommandIds[CommandIds[\"RefreshDisplay\"] = 15] = \"RefreshDisplay\";\n    CommandIds[CommandIds[\"DrawFramebuffer\"] = 16] = \"DrawFramebuffer\";\n    CommandIds[CommandIds[\"SetVibration\"] = 27] = \"SetVibration\";\n    // CONFIRM: 0x0302,\n    // TICK: 0x0400,\n    // BUTTON_PRESS: 0x0500,\n    // KNOB_ROTATE: 0x0501,\n    // RESET: 0x0506,\n    // MCU: 0x180d,\n})(CommandIds || (CommandIds = {}));\nclass LoupedeckDeviceBase extends eventemitter3_1.EventEmitter {\n    // protected readonly displays: LoupedeckDisplayDefinition[]\n    get controls() {\n        return this.modelSpec.controls;\n    }\n    get displayMain() {\n        return this.modelSpec.displayMain;\n    }\n    get displayLeftStrip() {\n        return this.modelSpec.displayLeftStrip;\n    }\n    get displayRightStrip() {\n        return this.modelSpec.displayRightStrip;\n    }\n    get displayWheel() {\n        return this.modelSpec.displayWheel;\n    }\n    constructor(connection, options, modelSpec) {\n        super();\n        _LoupedeckDeviceBase_instances.add(this);\n        _LoupedeckDeviceBase_touches.set(this, {});\n        _LoupedeckDeviceBase_connection.set(this, void 0);\n        _LoupedeckDeviceBase_pendingTransactions.set(this, {});\n        _LoupedeckDeviceBase_nextTransactionId.set(this, 0);\n        _LoupedeckDeviceBase_sendQueue.set(this, void 0);\n        __classPrivateFieldSet(this, _LoupedeckDeviceBase_connection, connection, \"f\");\n        this.options = { ...options };\n        this.modelSpec = modelSpec;\n        if (!this.options.skipWaitForAcks) {\n            __classPrivateFieldSet(this, _LoupedeckDeviceBase_sendQueue, new p_queue_1.default({\n                concurrency: 1,\n            }), \"f\");\n        }\n        __classPrivateFieldGet(this, _LoupedeckDeviceBase_connection, \"f\").on('error', (err) => {\n            __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_cleanupPendingPromises).call(this);\n            this.emit('error', err);\n        });\n        __classPrivateFieldGet(this, _LoupedeckDeviceBase_connection, \"f\").on('disconnect', () => {\n            // TODO - not if closed?\n            __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_cleanupPendingPromises).call(this);\n            this.emit('error', new Error('Connection lost'));\n        });\n        __classPrivateFieldGet(this, _LoupedeckDeviceBase_connection, \"f\").on('message', __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_onMessage).bind(this));\n    }\n    get modelId() {\n        return this.modelSpec.modelId;\n    }\n    get modelName() {\n        return this.modelSpec.modelName;\n    }\n    get lcdKeyColumns() {\n        return this.modelSpec.lcdKeyColumns;\n    }\n    get lcdKeyRows() {\n        return this.modelSpec.lcdKeyRows;\n    }\n    get lcdKeySize() {\n        return this.modelSpec.lcdKeySize;\n    }\n    async blankDevice(doDisplays = true, doButtons = true) {\n        // These steps are done manually, so that it is one operation in the queue, otherwise behaviour is a little non-deterministic\n        await __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_runInQueueIfEnabled).call(this, async () => {\n            if (doDisplays) {\n                for (const displayId of Object.values(constants_1.LoupedeckDisplayId)) {\n                    const display = __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_getDisplay).call(this, displayId);\n                    if (display) {\n                        const { encoded, encodedDisplay } = this.createBufferWithHeader(displayId, display.width + display.xPadding * 2, display.height + display.yPadding * 2, 0, 0);\n                        await __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_sendAndWaitIfRequired).call(this, CommandIds.DrawFramebuffer, encoded, true);\n                        // This may flush a display multiple times, but avoiding collisions is hard\n                        if (this.modelSpec.framebufferFlush) {\n                            await __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_sendAndWaitIfRequired).call(this, CommandIds.RefreshDisplay, encodedDisplay, true);\n                        }\n                    }\n                }\n            }\n            if (doButtons) {\n                const buttons = this.controls.filter((c) => c.type === constants_1.LoupedeckControlType.Button);\n                const payload = Buffer.alloc(4 * buttons.length);\n                for (let i = 0; i < buttons.length; i++) {\n                    payload.writeUInt8(buttons[i].encoded, i * 4);\n                }\n                await __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_sendAndWaitIfRequired).call(this, CommandIds.SetColour, payload, true);\n            }\n        }, false);\n    }\n    async close() {\n        __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_cleanupPendingPromises).call(this);\n        await __classPrivateFieldGet(this, _LoupedeckDeviceBase_connection, \"f\").close();\n    }\n    convertKeyIndexToCoordinates(index, display) {\n        const cols = this.lcdKeyColumns;\n        const width = this.lcdKeySize + (display.columnGap ?? 0);\n        const height = this.lcdKeySize + (display.rowGap ?? 0);\n        const x = (index % cols) * width;\n        const y = Math.floor(index / cols) * height;\n        return [x, y];\n    }\n    /**\n     * Create a buffer with the header predefined.\n     * @returns The buffer and the data offset\n     */\n    createBufferWithHeader(displayId, width, height, x, y) {\n        if (!this.modelSpec.splitTopDisplays) {\n            if (displayId === constants_1.LoupedeckDisplayId.Left || displayId === constants_1.LoupedeckDisplayId.Wheel) {\n                // Nothing to do\n            }\n            else if (displayId === constants_1.LoupedeckDisplayId.Center) {\n                x += this.displayLeftStrip?.width ?? 0;\n            }\n            else if (displayId === constants_1.LoupedeckDisplayId.Right) {\n                x += (this.displayLeftStrip?.width ?? 0) + (this.displayMain.width + this.displayMain.xPadding * 2);\n            }\n            else {\n                throw new Error('Unknown DisplayId');\n            }\n        }\n        const padding = 10; // header + id\n        const pixelCount = width * height;\n        const encoded = Buffer.alloc(pixelCount * 2 + padding);\n        let encodedDisplay = constants_1.DisplayMainEncodedId;\n        if (displayId === constants_1.LoupedeckDisplayId.Wheel) {\n            encodedDisplay = constants_1.DisplayWheelEncodedId;\n        }\n        else if (this.modelSpec.splitTopDisplays) {\n            switch (displayId) {\n                case constants_1.LoupedeckDisplayId.Center:\n                    encodedDisplay = constants_1.DisplayCenterEncodedId;\n                    break;\n                case constants_1.LoupedeckDisplayId.Left:\n                    encodedDisplay = constants_1.DisplayLeftEncodedId;\n                    break;\n                case constants_1.LoupedeckDisplayId.Right:\n                    encodedDisplay = constants_1.DisplayRightEncodedId;\n                    break;\n                default:\n                    throw new Error('Unknown DisplayId');\n            }\n        }\n        encodedDisplay.copy(encoded, 0);\n        encoded.writeUInt16BE(x, 2);\n        encoded.writeUInt16BE(y, 4);\n        encoded.writeUInt16BE(width, 6);\n        encoded.writeUInt16BE(height, 8);\n        return { encoded, padding, encodedDisplay };\n    }\n    async drawBuffer(displayId, buffer, format, width, height, x, y) {\n        const display = __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_getDisplay).call(this, displayId);\n        if (!display)\n            throw new Error('Invalid DisplayId');\n        if (width < 0 || width > display.width)\n            throw new Error('Image width is not valid');\n        if (height < 0 || height > display.height)\n            throw new Error('Image width is not valid');\n        if (x < 0 || x + width > display.width)\n            throw new Error('x is not valid');\n        if (y < 0 || y + height > display.height)\n            throw new Error('x is not valid');\n        const { encoded, padding, encodedDisplay } = this.createBufferWithHeader(displayId, width, height, x + display.xPadding, y + display.yPadding);\n        const [canDrawPixel, canDrawRow] = (0, util_1.createCanDrawPixel)(x, y, this.lcdKeySize, display);\n        (0, util_1.encodeBuffer)(buffer, encoded, format, padding, width, height, canDrawPixel, canDrawRow, display.endianness);\n        await __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_runInQueueIfEnabled).call(this, async () => {\n            // Run in the queue as a single operation\n            await __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_sendAndWaitIfRequired).call(this, CommandIds.DrawFramebuffer, encoded, true);\n            if (this.modelSpec.framebufferFlush) {\n                await __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_sendAndWaitIfRequired).call(this, CommandIds.RefreshDisplay, encodedDisplay, true);\n            }\n        }, false);\n    }\n    async drawKeyBuffer(index, buffer, format) {\n        const [x, y] = this.convertKeyIndexToCoordinates(index, this.displayMain);\n        const size = this.lcdKeySize;\n        return this.drawBuffer(constants_1.LoupedeckDisplayId.Center, buffer, format, size, size, x, y);\n    }\n    async drawSolidColour(displayId, color, width, height, x, y) {\n        const display = __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_getDisplay).call(this, displayId);\n        if (!display)\n            throw new Error('Invalid DisplayId');\n        if (width < 0 || width > display.width)\n            throw new Error('Image width is not valid');\n        if (height < 0 || height > display.height)\n            throw new Error('Image height is not valid');\n        if (x < 0 || x + width > display.width)\n            throw new Error('x is not valid');\n        if (y < 0 || y + height > display.height)\n            throw new Error('y is not valid');\n        (0, util_1.checkRGBColor)(color);\n        const encodedValue = (((Math.round(color.red) >> 3) & 0b11111) << 11) +\n            (((Math.round(color.green) >> 2) & 0b111111) << 5) +\n            ((Math.round(color.blue) >> 3) & 0b11111);\n        const [canDrawPixel, canDrawRow] = (0, util_1.createCanDrawPixel)(x, y, this.lcdKeySize, display);\n        const { encoded, padding, encodedDisplay } = this.createBufferWithHeader(displayId, width, height, x + display.xPadding, y);\n        for (let y = 0; y < height; y++) {\n            if (!canDrawRow(y))\n                continue;\n            for (let x = 0; x < width; x++) {\n                if (canDrawPixel(x, y)) {\n                    const i = y * width + x;\n                    if (display.endianness === 'BE') {\n                        encoded.writeUint16BE(encodedValue, i * 2 + padding);\n                    }\n                    else {\n                        encoded.writeUint16LE(encodedValue, i * 2 + padding);\n                    }\n                }\n            }\n        }\n        await __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_runInQueueIfEnabled).call(this, async () => {\n            // Run in the queue as a single operation\n            await __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_sendAndWaitIfRequired).call(this, CommandIds.DrawFramebuffer, encoded, true);\n            if (this.modelSpec.framebufferFlush) {\n                await __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_sendAndWaitIfRequired).call(this, CommandIds.RefreshDisplay, encodedDisplay, true);\n            }\n        }, false);\n    }\n    async getFirmwareVersion() {\n        const buffer = await __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_sendAndWaitForResult).call(this, CommandIds.GetVersion, undefined);\n        return `${buffer.readUInt8(0)}.${buffer.readUInt8(1)}.${buffer.readUInt8(2)}`;\n    }\n    async getSerialNumber() {\n        const buffer = await __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_sendAndWaitForResult).call(this, CommandIds.GetSerialNumber, undefined);\n        return buffer.toString().trim();\n    }\n    onTouch(event, buff) {\n        // Parse buffer\n        let x = buff.readUInt16BE(1);\n        let y = buff.readUInt16BE(3);\n        const id = buff.readUInt8(5);\n        const mainFullWidth = this.displayMain.width + this.displayMain.xPadding * 2;\n        const leftWidth = this.displayLeftStrip?.width ?? 0;\n        // Figure out which subscreen was touched\n        let screen = constants_1.LoupedeckDisplayId.Center;\n        const rightX = (this.displayLeftStrip?.width ?? 0) + mainFullWidth;\n        if (this.displayLeftStrip && x < leftWidth) {\n            screen = constants_1.LoupedeckDisplayId.Left;\n        }\n        else if (this.displayRightStrip && x >= rightX) {\n            screen = constants_1.LoupedeckDisplayId.Right;\n            x -= rightX;\n        }\n        else {\n            // else center\n            x -= leftWidth + this.displayMain.xPadding;\n            y -= this.displayMain.yPadding;\n        }\n        let key;\n        if (screen === constants_1.LoupedeckDisplayId.Center) {\n            // Pad by half the gap, to make the maths simpler\n            const xPadded = x + this.displayMain.columnGap / 2;\n            const yPadded = y + this.displayMain.rowGap / 2;\n            // Find the column, including the gap as evenly distributed\n            const column = Math.floor(xPadded / (this.lcdKeySize + this.displayMain.columnGap));\n            const row = Math.floor(yPadded / (this.lcdKeySize + this.displayMain.rowGap));\n            key = row * this.lcdKeyColumns + column;\n        }\n        __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_createTouch).call(this, event, x, y, id, screen, key);\n    }\n    onWheelTouch(event, buff) {\n        // Parse buffer\n        const x = buff.readUInt16BE(1);\n        const y = buff.readUInt16BE(3);\n        const id = buff.readUInt8(5);\n        const screen = constants_1.LoupedeckDisplayId.Wheel;\n        const key = undefined;\n        __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_createTouch).call(this, event, x, y, id, screen, key);\n    }\n    async setBrightness(value) {\n        const MAX_BRIGHTNESS = 10;\n        const byte = Math.max(0, Math.min(MAX_BRIGHTNESS, Math.round(value * MAX_BRIGHTNESS)));\n        return __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_sendAndWaitIfRequired).call(this, CommandIds.SetBrightness, Buffer.from([byte]));\n    }\n    async setButtonColor(...buttons) {\n        if (buttons.length === 0)\n            return;\n        // Compile a set of the valid button ids\n        const buttonIdLookup = {};\n        for (const control of this.controls) {\n            if (control.type === constants_1.LoupedeckControlType.Button) {\n                buttonIdLookup[control.index] = control.encoded;\n            }\n        }\n        // TODO - do we need to check for duplicates?\n        const payload = Buffer.alloc(4 * buttons.length);\n        for (let i = 0; i < buttons.length; i++) {\n            const button = buttons[i];\n            const offset = i * 4;\n            const encodedId = buttonIdLookup[button.id];\n            if (encodedId === undefined)\n                throw new TypeError('Expected a valid button id');\n            (0, util_1.checkRGBValue)(button.red);\n            (0, util_1.checkRGBValue)(button.green);\n            (0, util_1.checkRGBValue)(button.blue);\n            payload.writeUInt8(encodedId, offset + 0);\n            payload.writeUInt8(button.red, offset + 1);\n            payload.writeUInt8(button.green, offset + 2);\n            payload.writeUInt8(button.blue, offset + 3);\n        }\n        return __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_sendAndWaitIfRequired).call(this, CommandIds.SetColour, payload);\n    }\n    async vibrate(pattern) {\n        if (!pattern)\n            throw new Error('Invalid vibrate pattern');\n        // TODO - validate pattern better?\n        return __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_sendAndWaitIfRequired).call(this, CommandIds.SetVibration, Buffer.from([pattern]));\n    }\n}\nexports.LoupedeckDeviceBase = LoupedeckDeviceBase;\n_LoupedeckDeviceBase_touches = new WeakMap(), _LoupedeckDeviceBase_connection = new WeakMap(), _LoupedeckDeviceBase_pendingTransactions = new WeakMap(), _LoupedeckDeviceBase_nextTransactionId = new WeakMap(), _LoupedeckDeviceBase_sendQueue = new WeakMap(), _LoupedeckDeviceBase_instances = new WeakSet(), _LoupedeckDeviceBase_getDisplay = function _LoupedeckDeviceBase_getDisplay(displayId) {\n    switch (displayId) {\n        case constants_1.LoupedeckDisplayId.Center:\n            return this.displayMain;\n        case constants_1.LoupedeckDisplayId.Left:\n            return this.displayLeftStrip;\n        case constants_1.LoupedeckDisplayId.Right:\n            return this.displayRightStrip;\n        case constants_1.LoupedeckDisplayId.Wheel:\n            return this.displayWheel;\n        default:\n            // TODO Unreachable\n            return undefined;\n    }\n}, _LoupedeckDeviceBase_cleanupPendingPromises = function _LoupedeckDeviceBase_cleanupPendingPromises() {\n    setTimeout(() => {\n        for (const promise of Object.values(__classPrivateFieldGet(this, _LoupedeckDeviceBase_pendingTransactions, \"f\"))) {\n            promise.reject(new Error('Connection closed'));\n        }\n    }, 0);\n}, _LoupedeckDeviceBase_onMessage = function _LoupedeckDeviceBase_onMessage(buff) {\n    try {\n        const length = buff.readUint8(2);\n        if (length + 2 !== buff.length)\n            return;\n        const header = buff.readUInt8(3);\n        const transactionID = buff.readUInt8(4);\n        if (transactionID === 0) {\n            switch (header) {\n                case 0x00: // Press\n                    __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_onPress).call(this, buff.subarray(5));\n                    break;\n                case 0x01: // Rotate\n                    __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_onRotate).call(this, buff.subarray(5));\n                    break;\n                case 0x4d: // touchmove\n                    this.onTouch('touchmove', buff.subarray(5));\n                    break;\n                case 0x6d: // touchend\n                    this.onTouch('touchend', buff.subarray(5));\n                    break;\n                case 0x52: // wheel touchmove\n                    this.onWheelTouch('touchmove', buff.subarray(5));\n                    break;\n                case 0x72: // wheel touchend\n                    this.onWheelTouch('touchend', buff.subarray(5));\n                    break;\n                default:\n                    console.warn('unhandled incoming message', buff);\n                    break;\n            }\n        }\n        else {\n            const resolver = __classPrivateFieldGet(this, _LoupedeckDeviceBase_pendingTransactions, \"f\")[transactionID];\n            if (resolver) {\n                resolver.resolve(buff.subarray(5));\n                delete __classPrivateFieldGet(this, _LoupedeckDeviceBase_pendingTransactions, \"f\")[transactionID];\n            }\n        }\n    }\n    catch (e) {\n        console.error('Unhandled error in serial message handler:', e);\n    }\n}, _LoupedeckDeviceBase_onPress = function _LoupedeckDeviceBase_onPress(buff) {\n    const controlEncoded = buff.readUint8(0);\n    const control = this.controls.find((b) => b.encoded === controlEncoded);\n    if (control) {\n        const event = buff.readUint8(1) === 0x00 ? 'down' : 'up';\n        this.emit(event, { type: control.type, index: control.index });\n    }\n}, _LoupedeckDeviceBase_onRotate = function _LoupedeckDeviceBase_onRotate(buff) {\n    const controlEncoded = buff.readUInt8(0);\n    const control = this.controls.find((b) => b.encoded === controlEncoded);\n    if (control && control.type === constants_1.LoupedeckControlType.Rotary) {\n        const delta = buff.readInt8(1);\n        this.emit('rotate', { type: control.type, index: control.index }, delta);\n    }\n}, _LoupedeckDeviceBase_createTouch = function _LoupedeckDeviceBase_createTouch(event, x, y, id, screen, key) {\n    // Create touch\n    const touch = { x, y, id, target: { screen, key } };\n    // End touch, remove from local cache\n    if (event === 'touchend') {\n        delete __classPrivateFieldGet(this, _LoupedeckDeviceBase_touches, \"f\")[touch.id];\n    }\n    else {\n        // First time seeing this touch, emit touchstart instead of touchmove\n        if (!__classPrivateFieldGet(this, _LoupedeckDeviceBase_touches, \"f\")[touch.id])\n            event = 'touchstart';\n        __classPrivateFieldGet(this, _LoupedeckDeviceBase_touches, \"f\")[touch.id] = touch;\n    }\n    this.emit(event, { touches: Object.values(__classPrivateFieldGet(this, _LoupedeckDeviceBase_touches, \"f\")), changedTouches: [touch] });\n}, _LoupedeckDeviceBase_runInQueueIfEnabled = async function _LoupedeckDeviceBase_runInQueueIfEnabled(fn, forceSkipQueue) {\n    if (__classPrivateFieldGet(this, _LoupedeckDeviceBase_sendQueue, \"f\") && !forceSkipQueue) {\n        return __classPrivateFieldGet(this, _LoupedeckDeviceBase_sendQueue, \"f\").add(fn);\n    }\n    else {\n        return fn();\n    }\n}, _LoupedeckDeviceBase_sendAndWaitIfRequired = async function _LoupedeckDeviceBase_sendAndWaitIfRequired(commandId, payload, skipQueue = false) {\n    return __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_runInQueueIfEnabled).call(this, async () => {\n        const transactionId = await __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_sendCommand).call(this, commandId, payload);\n        if (!this.options.skipWaitForAcks)\n            await __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_waitForTransaction).call(this, transactionId);\n    }, skipQueue);\n}, _LoupedeckDeviceBase_sendAndWaitForResult = async function _LoupedeckDeviceBase_sendAndWaitForResult(commandId, payload, skipQueue = false) {\n    return __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_runInQueueIfEnabled).call(this, async () => {\n        const transactionId = await __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_sendCommand).call(this, commandId, payload);\n        return __classPrivateFieldGet(this, _LoupedeckDeviceBase_instances, \"m\", _LoupedeckDeviceBase_waitForTransaction).call(this, transactionId);\n    }, skipQueue);\n}, _LoupedeckDeviceBase_sendCommand = async function _LoupedeckDeviceBase_sendCommand(commandId, payload) {\n    var _a;\n    if (!__classPrivateFieldGet(this, _LoupedeckDeviceBase_connection, \"f\").isReady())\n        throw new Error('Not connected!');\n    __classPrivateFieldSet(this, _LoupedeckDeviceBase_nextTransactionId, (__classPrivateFieldGet(this, _LoupedeckDeviceBase_nextTransactionId, \"f\") + 1) % 256, \"f\");\n    // Skip transaction ID's of zero since the device seems to ignore them\n    if (__classPrivateFieldGet(this, _LoupedeckDeviceBase_nextTransactionId, \"f\") === 0)\n        __classPrivateFieldSet(this, _LoupedeckDeviceBase_nextTransactionId, (_a = __classPrivateFieldGet(this, _LoupedeckDeviceBase_nextTransactionId, \"f\"), _a++, _a), \"f\");\n    const packet = Buffer.alloc(3 + (payload?.length ?? 0));\n    packet.writeUInt8(packet.length >= 0xff ? 0xff : packet.length, 0); // TODO - what if it is longer?\n    packet.writeUInt8(commandId, 1);\n    packet.writeUInt8(__classPrivateFieldGet(this, _LoupedeckDeviceBase_nextTransactionId, \"f\"), 2);\n    if (payload && payload.length) {\n        payload.copy(packet, 3);\n    }\n    await __classPrivateFieldGet(this, _LoupedeckDeviceBase_connection, \"f\").send(packet);\n    return __classPrivateFieldGet(this, _LoupedeckDeviceBase_nextTransactionId, \"f\");\n}, _LoupedeckDeviceBase_waitForTransaction = async function _LoupedeckDeviceBase_waitForTransaction(transactionID) {\n    if (__classPrivateFieldGet(this, _LoupedeckDeviceBase_pendingTransactions, \"f\")[transactionID])\n        throw new Error('Transaction handler already defined');\n    if (!__classPrivateFieldGet(this, _LoupedeckDeviceBase_connection, \"f\").isReady())\n        throw new Error('Connection is not open');\n    const handler = {\n        resolve: () => null,\n        reject: () => null,\n    };\n    const promise = new Promise((resolve, reject) => {\n        handler.resolve = resolve;\n        handler.reject = reject;\n    });\n    __classPrivateFieldGet(this, _LoupedeckDeviceBase_pendingTransactions, \"f\")[transactionID] = handler;\n    return promise;\n};\n//# sourceMappingURL=base.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoupedeckCtDeviceV1 = void 0;\nconst __1 = require(\"..\");\nconst base_1 = require(\"./base\");\nconst ct_v2_1 = require(\"./ct-v2\");\nconst LoupedeckCtV1ModelSpec = {\n    ...ct_v2_1.LoupedeckCtV2ModelSpec,\n    splitTopDisplays: true,\n    modelId: __1.LoupedeckModelId.LoupedeckCtV1,\n    framebufferFlush: true,\n};\nclass LoupedeckCtDeviceV1 extends base_1.LoupedeckDeviceBase {\n    constructor(connection, options) {\n        super(connection, options, LoupedeckCtV1ModelSpec);\n    }\n}\nexports.LoupedeckCtDeviceV1 = LoupedeckCtDeviceV1;\n//# sourceMappingURL=ct-v1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoupedeckCtDeviceV2 = exports.LoupedeckCtV2ModelSpec = void 0;\nconst constants_1 = require(\"../constants\");\nconst base_1 = require(\"./base\");\nconst info_1 = require(\"../info\");\nconst DisplayLeft = {\n    width: 60,\n    height: 270,\n    xPadding: 0,\n    yPadding: 0,\n    columnGap: 0,\n    rowGap: 0,\n};\nconst DisplayCenter = {\n    width: 360 - 5 * 2,\n    height: 270 - 5 * 2,\n    xPadding: 5,\n    yPadding: 5,\n    columnGap: 10,\n    rowGap: 10,\n};\nconst DisplayRight = {\n    width: 60,\n    height: 270,\n    xPadding: 0,\n    yPadding: 0,\n    columnGap: 0,\n    rowGap: 0,\n};\nconst DisplayWheel = {\n    width: 240,\n    height: 240,\n    xPadding: 0,\n    yPadding: 0,\n    columnGap: 0,\n    rowGap: 0,\n    endianness: 'BE',\n};\nexports.LoupedeckCtV2ModelSpec = {\n    controls: [],\n    displayMain: DisplayCenter,\n    displayLeftStrip: DisplayLeft,\n    displayRightStrip: DisplayRight,\n    displayWheel: DisplayWheel,\n    modelId: info_1.LoupedeckModelId.LoupedeckCt,\n    modelName: 'Loupedeck CT',\n    lcdKeySize: 80,\n    lcdKeyColumns: 4,\n    lcdKeyRows: 3,\n};\nfor (let i = 0; i < 8; i++) {\n    // round buttons\n    exports.LoupedeckCtV2ModelSpec.controls.push({\n        type: constants_1.LoupedeckControlType.Button,\n        index: i,\n        encoded: 0x07 + i,\n    });\n}\nfor (let i = 0; i < 12; i++) {\n    // square buttons\n    exports.LoupedeckCtV2ModelSpec.controls.push({\n        type: constants_1.LoupedeckControlType.Button,\n        index: i + 8,\n        encoded: 0x0f + i,\n    });\n}\nfor (let i = 0; i < 6; i++) {\n    // small rotary encoders\n    exports.LoupedeckCtV2ModelSpec.controls.push({\n        type: constants_1.LoupedeckControlType.Rotary,\n        index: i,\n        encoded: 0x01 + i,\n    });\n}\n// big wheel encoder\nexports.LoupedeckCtV2ModelSpec.controls.push({\n    type: constants_1.LoupedeckControlType.Rotary,\n    index: 6,\n    encoded: 0x00,\n});\nclass LoupedeckCtDeviceV2 extends base_1.LoupedeckDeviceBase {\n    constructor(connection, options) {\n        super(connection, options, exports.LoupedeckCtV2ModelSpec);\n    }\n}\nexports.LoupedeckCtDeviceV2 = LoupedeckCtDeviceV2;\n//# sourceMappingURL=ct-v2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEVICE_MODELS = void 0;\nconst constants_1 = require(\"../constants\");\nconst info_1 = require(\"../info\");\nconst live_1 = require(\"./live\");\nconst razer_stream_controller_1 = require(\"./razer-stream-controller\");\nconst live_s_1 = require(\"./live-s\");\nconst ct_v2_1 = require(\"./ct-v2\");\nconst razer_stream_controller_x_1 = require(\"./razer-stream-controller-x\");\nconst ct_v1_1 = require(\"./ct-v1\");\n/** List of all the known models, and the classes to use them */\nexports.DEVICE_MODELS = [\n    {\n        id: info_1.LoupedeckModelId.LoupedeckCtV1,\n        vendorId: constants_1.VendorIdLoupedeck,\n        productId: 0x0003,\n        class: ct_v1_1.LoupedeckCtDeviceV1,\n    },\n    {\n        id: info_1.LoupedeckModelId.LoupedeckCt,\n        vendorId: constants_1.VendorIdLoupedeck,\n        productId: 0x0007,\n        class: ct_v2_1.LoupedeckCtDeviceV2,\n    },\n    {\n        id: info_1.LoupedeckModelId.LoupedeckLive,\n        vendorId: constants_1.VendorIdLoupedeck,\n        productId: 0x0004,\n        class: live_1.LoupedeckLiveDevice,\n    },\n    {\n        id: info_1.LoupedeckModelId.LoupedeckLiveS,\n        vendorId: constants_1.VendorIdLoupedeck,\n        productId: 0x0006,\n        class: live_s_1.LoupedeckLiveSDevice,\n    },\n    {\n        id: info_1.LoupedeckModelId.RazerStreamController,\n        vendorId: constants_1.VendorIdRazer,\n        productId: 0x0d06,\n        class: razer_stream_controller_1.RazerStreamControllerDevice,\n    },\n    {\n        id: info_1.LoupedeckModelId.RazerStreamControllerX,\n        vendorId: constants_1.VendorIdRazer,\n        productId: 0x0d09,\n        class: razer_stream_controller_x_1.RazerStreamControllerDeviceX,\n    },\n];\n//# sourceMappingURL=list.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoupedeckLiveSDevice = void 0;\nconst constants_1 = require(\"../constants\");\nconst base_1 = require(\"./base\");\nconst info_1 = require(\"../info\");\nconst DisplayCenter = {\n    width: 480 - 18 * 2,\n    height: 270 - 5 * 2,\n    xPadding: 18,\n    yPadding: 5,\n    columnGap: 10,\n    rowGap: 10,\n};\nconst modelSpec = {\n    controls: [],\n    displayMain: DisplayCenter,\n    displayLeftStrip: undefined,\n    displayRightStrip: undefined,\n    modelId: info_1.LoupedeckModelId.LoupedeckLiveS,\n    modelName: 'Loupedeck Live S',\n    lcdKeySize: 80,\n    lcdKeyColumns: 5,\n    lcdKeyRows: 3,\n};\nfor (let i = 0; i < 2; i++) {\n    modelSpec.controls.push({\n        type: constants_1.LoupedeckControlType.Rotary,\n        index: i,\n        encoded: 0x01 + i,\n    });\n}\nfor (let i = 0; i < 4; i++) {\n    modelSpec.controls.push({\n        type: constants_1.LoupedeckControlType.Button,\n        index: i,\n        encoded: 0x07 + i,\n    });\n}\nclass LoupedeckLiveSDevice extends base_1.LoupedeckDeviceBase {\n    constructor(connection, options) {\n        super(connection, options, modelSpec);\n    }\n}\nexports.LoupedeckLiveSDevice = LoupedeckLiveSDevice;\n//# sourceMappingURL=live-s.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoupedeckLiveDevice = void 0;\nconst constants_1 = require(\"../constants\");\nconst base_1 = require(\"./base\");\nconst info_1 = require(\"../info\");\nconst DisplayLeft = {\n    width: 60,\n    height: 270,\n    xPadding: 0,\n    yPadding: 0,\n    columnGap: 0,\n    rowGap: 0,\n};\nconst DisplayCenter = {\n    width: 360 - 5 * 2,\n    height: 270 - 5 * 2,\n    xPadding: 5,\n    yPadding: 5,\n    columnGap: 10,\n    rowGap: 10,\n};\nconst DisplayRight = {\n    width: 60,\n    height: 270,\n    xPadding: 0,\n    yPadding: 0,\n    columnGap: 0,\n    rowGap: 0,\n};\nconst modelSpec = {\n    controls: [],\n    displayMain: DisplayCenter,\n    displayLeftStrip: DisplayLeft,\n    displayRightStrip: DisplayRight,\n    modelId: info_1.LoupedeckModelId.LoupedeckLive,\n    modelName: 'Loupedeck Live',\n    lcdKeySize: 80,\n    lcdKeyColumns: 4,\n    lcdKeyRows: 3,\n};\nfor (let i = 0; i < 8; i++) {\n    modelSpec.controls.push({\n        type: constants_1.LoupedeckControlType.Button,\n        index: i,\n        encoded: 0x07 + i,\n    });\n}\nfor (let i = 0; i < 6; i++) {\n    modelSpec.controls.push({\n        type: constants_1.LoupedeckControlType.Rotary,\n        index: i,\n        encoded: 0x01 + i,\n    });\n}\nclass LoupedeckLiveDevice extends base_1.LoupedeckDeviceBase {\n    constructor(connection, options) {\n        super(connection, options, modelSpec);\n    }\n}\nexports.LoupedeckLiveDevice = LoupedeckLiveDevice;\n//# sourceMappingURL=live.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RazerStreamControllerDeviceX = void 0;\nconst constants_1 = require(\"../constants\");\nconst base_1 = require(\"./base\");\nconst info_1 = require(\"../info\");\nconst DisplayCenter = {\n    width: 480 - 5 * 2,\n    height: 270,\n    xPadding: 5,\n    yPadding: 0,\n    columnGap: 20,\n    rowGap: 18,\n};\nconst modelSpec = {\n    controls: [],\n    displayMain: DisplayCenter,\n    displayLeftStrip: undefined,\n    displayRightStrip: undefined,\n    modelId: info_1.LoupedeckModelId.RazerStreamControllerX,\n    modelName: 'Razer Stream Controller X',\n    lcdKeySize: 78,\n    lcdKeyColumns: 5,\n    lcdKeyRows: 3,\n};\nfor (let i = 0; i < 15; i++) {\n    modelSpec.controls.push({\n        type: constants_1.LoupedeckControlType.Button,\n        index: i,\n        encoded: 0x1b + i,\n    });\n}\nclass RazerStreamControllerDeviceX extends base_1.LoupedeckDeviceBase {\n    constructor(connection, options) {\n        super(connection, options, modelSpec);\n    }\n    onTouch(_event, _buff) {\n        // Not supported by device\n    }\n}\nexports.RazerStreamControllerDeviceX = RazerStreamControllerDeviceX;\n//# sourceMappingURL=razer-stream-controller-x.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RazerStreamControllerDevice = void 0;\nconst constants_1 = require(\"../constants\");\nconst base_1 = require(\"./base\");\nconst info_1 = require(\"../info\");\nconst DisplayLeft = {\n    width: 60,\n    height: 270,\n    xPadding: 0,\n    yPadding: 0,\n    columnGap: 0,\n    rowGap: 0,\n};\nconst DisplayCenter = {\n    width: 360 - 5 * 2,\n    height: 270 - 5 * 2,\n    xPadding: 5,\n    yPadding: 5,\n    columnGap: 10,\n    rowGap: 10,\n};\nconst DisplayRight = {\n    width: 60,\n    height: 270,\n    xPadding: 0,\n    yPadding: 0,\n    columnGap: 0,\n    rowGap: 0,\n};\nconst modelSpec = {\n    controls: [],\n    displayMain: DisplayCenter,\n    displayLeftStrip: DisplayLeft,\n    displayRightStrip: DisplayRight,\n    modelId: info_1.LoupedeckModelId.RazerStreamController,\n    modelName: 'Razer Stream Controller',\n    lcdKeySize: 80,\n    lcdKeyColumns: 4,\n    lcdKeyRows: 3,\n};\nfor (let i = 0; i < 8; i++) {\n    modelSpec.controls.push({\n        type: constants_1.LoupedeckControlType.Button,\n        index: i,\n        encoded: 0x07 + i,\n    });\n}\nfor (let i = 0; i < 6; i++) {\n    modelSpec.controls.push({\n        type: constants_1.LoupedeckControlType.Rotary,\n        index: i,\n        encoded: 0x01 + i,\n    });\n}\nclass RazerStreamControllerDevice extends base_1.LoupedeckDeviceBase {\n    constructor(connection, options) {\n        super(connection, options, modelSpec);\n    }\n}\nexports.RazerStreamControllerDevice = RazerStreamControllerDevice;\n//# sourceMappingURL=razer-stream-controller.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoupedeckSerialConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nclass LoupedeckSerialConnection extends eventemitter3_1.EventEmitter {\n}\nexports.LoupedeckSerialConnection = LoupedeckSerialConnection;\n//# sourceMappingURL=serial.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkRGBColor = exports.checkRGBValue = exports.encodeBuffer = exports.createCanDrawPixel = void 0;\nconst constants_1 = require(\"./constants\");\nfunction createCanDrawPixel(drawX, drawY, lcdKeySize, displayInfo) {\n    const roundY = lcdKeySize + displayInfo.rowGap;\n    const roundX = lcdKeySize + displayInfo.columnGap;\n    const canDrawPixel = (x, y) => {\n        if (displayInfo.rowGap > 0 && (drawY + y) % roundY >= lcdKeySize) {\n            // Skip blanked rows\n            return false;\n        }\n        if (displayInfo.columnGap > 0 && (drawX + x) % roundX >= lcdKeySize) {\n            // Skip blanked rows\n            return false;\n        }\n        return true;\n    };\n    const canDrawRow = (y) => {\n        if (displayInfo.rowGap > 0 && (drawY + y) % roundY >= lcdKeySize) {\n            // Skip blanked rows\n            return false;\n        }\n        return true;\n    };\n    return [canDrawPixel, canDrawRow];\n}\nexports.createCanDrawPixel = createCanDrawPixel;\nfunction encodeBuffer(input, output, format, outputPadding, width, height, canDrawPixel, canDrawRow, endianness) {\n    const pixelCount = width * height;\n    if (input.length !== pixelCount * format.length)\n        throw new Error(`Incorrect buffer length ${input.length} expected ${pixelCount * format.length}`);\n    if (output.length !== pixelCount * 2 + outputPadding)\n        throw new Error(`Incorrect buffer length ${output.length} expected ${pixelCount * 2 + outputPadding}`);\n    switch (format) {\n        case constants_1.LoupedeckBufferFormat.RGB:\n            for (let y = 0; y < height; y++) {\n                if (!canDrawRow(y))\n                    continue;\n                for (let x = 0; x < width; x++) {\n                    if (!canDrawPixel(x, y))\n                        continue;\n                    const i = y * width + x;\n                    const r = input.readUInt8(i * 3 + 0) >> 3;\n                    const g = input.readUInt8(i * 3 + 1) >> 2;\n                    const b = input.readUInt8(i * 3 + 2) >> 3;\n                    if (endianness === 'BE') {\n                        output.writeUint16BE((r << 11) + (g << 5) + b, outputPadding + i * 2);\n                    }\n                    else {\n                        output.writeUint16LE((r << 11) + (g << 5) + b, outputPadding + i * 2);\n                    }\n                }\n            }\n            break;\n        default:\n            throw new Error(`Unknown BufferFormat: \"${format}\"`);\n    }\n}\nexports.encodeBuffer = encodeBuffer;\nfunction checkRGBValue(value) {\n    if (value < 0 || value > 255) {\n        throw new TypeError('Expected a valid color RGB value 0 - 255');\n    }\n}\nexports.checkRGBValue = checkRGBValue;\nfunction checkRGBColor(color) {\n    checkRGBValue(color.red);\n    checkRGBValue(color.green);\n    checkRGBValue(color.blue);\n}\nexports.checkRGBColor = checkRGBColor;\n//# sourceMappingURL=util.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openDevice = exports.getLoupedecks = exports.requestLoupedeck = void 0;\nconst internal_1 = require(\"@loupedeck/core/dist/internal\");\nconst serial_1 = require(\"./serial\");\n__exportStar(require(\"@loupedeck/core\"), exports);\nconst serialFilters = internal_1.DEVICE_MODELS.map((model) => ({\n    usbProductId: model.productId,\n    usbVendorId: model.vendorId,\n}));\n/**\n * Request the user to select some streamdecks to open\n * @param userOptions Options to customise the device behvaiour\n */\nasync function requestLoupedeck(options) {\n    // TODO what happens if the user cancels?\n    const browserDevice = await navigator.serial.requestPort({\n        filters: serialFilters,\n    });\n    return openDevice(browserDevice, options);\n}\nexports.requestLoupedeck = requestLoupedeck;\n/**\n * Reopen previously selected streamdecks.\n * The browser remembers what the user previously allowed your site to access, and this will open those without the request dialog\n * @param options Options to customise the device behvaiour\n */\nasync function getLoupedecks(options) {\n    const browserDevices = await navigator.serial.getPorts();\n    if (browserDevices.length === 0) {\n        return [];\n    }\n    const validIds = new Set();\n    for (const model of internal_1.DEVICE_MODELS) {\n        validIds.add(`${model.vendorId}-${model.productId}`);\n    }\n    const validDevices = browserDevices.filter((dev) => {\n        const portInfo = dev.getInfo();\n        return validIds.has(`${portInfo.usbVendorId}-${portInfo.usbProductId}`);\n    });\n    const resultDevices = await Promise.all(validDevices.map(async (dev) => openDevice(dev, options).catch((_) => null)) // Ignore failures\n    );\n    return resultDevices.filter((v) => !!v);\n}\nexports.getLoupedecks = getLoupedecks;\n/**\n * Open a StreamDeck from a manually selected HIDDevice handle\n * @param browserPort The unopened browser HIDDevice\n * @param userOptions Options to customise the device behvaiour\n */\nasync function openDevice(browserPort, userOptions) {\n    const portInfo = browserPort.getInfo();\n    const model = internal_1.DEVICE_MODELS.find((m) => m.productId === portInfo.usbProductId && m.vendorId === portInfo.usbVendorId);\n    if (!model) {\n        throw new Error('Stream Deck is of unexpected type.');\n    }\n    const serialPort = await serial_1.LoupedeckWebSerialConnection.open(browserPort);\n    // await browserDevice.open()\n    const options = userOptions ?? {};\n    const device = new model.class(serialPort, options || {});\n    // return new StreamDeckWeb(device)\n    return device;\n}\nexports.openDevice = openDevice;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoupedeckWebSerialConnection = void 0;\nconst core_1 = require(\"@loupedeck/core\");\nconst internal_1 = require(\"@loupedeck/core/dist/internal\");\nclass LoupedeckWebSerialConnection extends core_1.LoupedeckSerialConnection {\n    constructor(connection, reader, writer) {\n        super();\n        this.connection = connection;\n        this.reader = reader;\n        this.writer = writer;\n        this.isOpen = true;\n        this.connection.addEventListener('error', (err) => {\n            this.emit('error', err); // TODO\n        });\n        this.connection.addEventListener('connect', () => {\n            console.log('connect');\n            this.isOpen = true;\n            // TODO - will this ever fire in a usable way?\n            try {\n                this.openReaderWriter();\n            }\n            catch (err) {\n                this.emit('error', err); // TODO\n            }\n        });\n        this.connection.addEventListener('disconnect', () => {\n            console.log('disconnect');\n            this.isOpen = false;\n            this.closeReaderWriter();\n            this.emit('disconnect');\n        });\n        this.startReadLoop(this.reader);\n    }\n    startReadLoop(reader) {\n        Promise.resolve()\n            .then(async () => {\n            const parser = new PacketLengthParser({\n                delimiter: 0x82,\n            });\n            // eslint-disable-next-line no-constant-condition\n            while (true) {\n                const { value, done } = await reader.read();\n                if (value) {\n                    const chunks = parser.transform(Buffer.from(value));\n                    for (const chunk of chunks) {\n                        this.emit('message', chunk);\n                    }\n                }\n                if (done) {\n                    // Allow the serial port to be closed later.\n                    reader.releaseLock();\n                    break;\n                }\n            }\n        })\n            .catch((e) => {\n            this.emit('error', e);\n        });\n    }\n    closeReaderWriter() {\n        if (this.writer) {\n            this.writer.close().catch(() => null);\n            delete this.writer;\n        }\n    }\n    openReaderWriter() {\n        this.closeReaderWriter();\n        if (!this.connection)\n            throw new Error('SerialPort is closed');\n        if (!this.connection.writable)\n            throw new Error('SerialPort is not writable');\n        if (!this.connection.readable)\n            throw new Error('SerialPort is not readable');\n        this.writer = this.connection.writable.getWriter();\n        this.reader = this.connection.readable.getReader();\n        this.startReadLoop(this.reader);\n    }\n    static async open(connection) {\n        let reader;\n        let writer;\n        try {\n            await connection.open({\n                baudRate: 256000,\n            });\n            if (!connection.writable)\n                throw new Error('SerialPort is not writable');\n            if (!connection.readable)\n                throw new Error('SerialPort is not readable');\n            writer = connection.writable.getWriter();\n            reader = connection.readable.getReader();\n            // Sometimes the first write gets lost\n            let readComplete = false;\n            const writer2 = writer;\n            const [firstRead] = await Promise.all([\n                reader.read().then((res) => {\n                    // Inform the write loop to sto\n                    readComplete = true;\n                    return res;\n                }),\n                new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                        // Catchall timeout to abort if it doesn't complete in time\n                        reject(new Error('Timed out'));\n                    }, 5000);\n                    const tick = () => {\n                        if (readComplete) {\n                            // Read has finished. Stop repeating the write\n                            resolve();\n                        }\n                        else {\n                            // Try writing again\n                            writer2\n                                .write(internal_1.WS_UPGRADE_HEADER)\n                                .then(() => {\n                                // Run again\n                                setTimeout(tick, 10);\n                            })\n                                .catch((e) => {\n                                reject(e);\n                            });\n                        }\n                    };\n                    tick();\n                }),\n            ]).catch((e) => {\n                // If the read failed, stop the write from contuing\n                readComplete = true;\n                // If the write failed, abort the read\n                reader?.cancel('Aborted').catch(() => null);\n                // Forward the error onwards\n                throw e;\n            });\n            if (!firstRead.value)\n                throw new Error(`No handshake response`);\n            const responseBuffer = Buffer.from(firstRead.value);\n            if (!responseBuffer.toString().startsWith(internal_1.WS_UPGRADE_RESPONSE))\n                throw new Error(`Invalid handshake response: ${responseBuffer.toString()}`);\n            return new LoupedeckWebSerialConnection(connection, reader, writer);\n        }\n        catch (err) {\n            // cleanup any in-progress connection\n            connection.close().catch(() => null);\n            reader?.cancel('Aborted')?.catch(() => null);\n            writer?.abort('Aborted')?.catch(() => null);\n            throw err;\n        }\n    }\n    async close() {\n        if (this.writer) {\n            this.writer.close().catch(() => null); // Ignore error\n            delete this.writer;\n        }\n        if (this.connection) {\n            await this.connection.close().catch(() => null); // Ignore error\n            delete this.connection;\n        }\n    }\n    isReady() {\n        return this.connection !== undefined && this.isOpen;\n    }\n    async send(buff, raw = false) {\n        if (!this.connection || !this.writer)\n            throw new Error('Not connected!');\n        if (!raw) {\n            let prep;\n            // Large messages\n            if (buff.length > 0xff) {\n                prep = Buffer.alloc(14);\n                prep.writeUint8(0x82, 0);\n                prep.writeUint8(0xff, 1);\n                prep.writeUInt32BE(buff.length, 6);\n            }\n            // Small messages\n            else {\n                // Prepend each message with a send indicating the length to come\n                prep = Buffer.alloc(6);\n                prep.writeUint8(0x82, 0);\n                prep.writeUint8(0x80 + buff.length, 1); // TODO - is this correct, or should it switch to large mode sooner?\n            }\n            await this.writer.write(prep);\n        }\n        await this.writer.write(buff);\n    }\n}\nexports.LoupedeckWebSerialConnection = LoupedeckWebSerialConnection;\nclass PacketLengthParser {\n    constructor(options = {}) {\n        this.buffer = Buffer.alloc(0);\n        this.start = true;\n        const { delimiter = 0xaa, packetOverhead = 2, lengthBytes = 1, lengthOffset = 1, maxLen = 0xff } = options;\n        this.opts = {\n            delimiter,\n            packetOverhead,\n            lengthBytes,\n            lengthOffset,\n            maxLen,\n        };\n    }\n    transform(chunk) {\n        const chunks = [];\n        // TODO - this is really really inefficient...\n        for (let ndx = 0; ndx < chunk.length; ndx++) {\n            const byte = chunk[ndx];\n            if (byte === this.opts.delimiter) {\n                this.start = true;\n            }\n            if (true === this.start) {\n                this.buffer = Buffer.concat([this.buffer, Buffer.from([byte])]);\n                if (this.buffer.length >= this.opts.lengthOffset + this.opts.lengthBytes) {\n                    const len = this.buffer.readUIntLE(this.opts.lengthOffset, this.opts.lengthBytes);\n                    if (this.buffer.length == len + this.opts.packetOverhead || len > this.opts.maxLen) {\n                        chunks.push(this.buffer);\n                        this.buffer = Buffer.alloc(0);\n                        this.start = false;\n                    }\n                }\n            }\n        }\n        return chunks;\n    }\n}\n//# sourceMappingURL=serial.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import {\n\trequestLoupedeck,\n\tgetLoupedecks,\n\tLoupedeckDevice,\n\tLoupedeckControlInfo,\n\tLoupedeckTouchEventData,\n} from '@loupedeck/web'\nimport { Demo } from './demo/demo'\n// import { DomImageDemo } from './demo/dom'\nimport { FillWhenPressedDemo } from './demo/fill-when-pressed'\nimport { RapidFillDemo } from './demo/rapid-fill'\n// import { ChaseDemo } from './demo/chase'\n\ndeclare const LIB_VERSION: any\nif (LIB_VERSION) {\n\tconst elm = document.querySelector('#version_str')\n\tif (elm) {\n\t\telm.innerHTML = `v${LIB_VERSION}`\n\t}\n}\n\nfunction appendLog(str: string) {\n\tconst logElm = document.getElementById('log')\n\tif (logElm) {\n\t\tlogElm.textContent = `${str}\\n${logElm.textContent ?? ''}`\n\t}\n}\n\nconst demoSelect = document.getElementById('demo-select') as HTMLInputElement | undefined\nconst consentButton = document.getElementById('consent-button')\n\nlet device: LoupedeckDevice | null = null\nlet currentDemo: Demo = new FillWhenPressedDemo()\nasync function demoChange() {\n\tif (demoSelect) {\n\t\tconsole.log(`Selected demo: ${demoSelect.value}`)\n\t\tif (device) {\n\t\t\tawait currentDemo.stop(device)\n\t\t}\n\n\t\tswitch (demoSelect.value) {\n\t\t\tcase 'rapid-fill':\n\t\t\t\tcurrentDemo = new RapidFillDemo()\n\t\t\t\tbreak\n\t\t\t// \tcase 'dom':\n\t\t\t// \t\tcurrentDemo = new DomImageDemo()\n\t\t\t// \t\tbreak\n\t\t\t// \tcase 'chase':\n\t\t\t// \t\tcurrentDemo = new ChaseDemo()\n\t\t\t// \t\tbreak\n\t\t\tcase 'fill-when-pressed':\n\t\t\tdefault:\n\t\t\t\tcurrentDemo = new FillWhenPressedDemo()\n\t\t\t\tbreak\n\t\t}\n\n\t\tif (device) {\n\t\t\tawait currentDemo.start(device)\n\t\t}\n\t}\n}\n\nasync function openDevice(device: LoupedeckDevice): Promise<void> {\n\tappendLog(`Device opened`)\n\tappendLog(`Serial: ${await device.getSerialNumber()} Firmware: ${await device.getFirmwareVersion()}`)\n\n\tdevice.on('error', (err: Error) => {\n\t\tappendLog(`Error: ${err}`)\n\t})\n\tdevice.on('down', (info: LoupedeckControlInfo) => {\n\t\tappendLog(`${info.type}-${info.index} down`)\n\t\tcurrentDemo.controlDown(device, info).catch(console.error)\n\t})\n\tdevice.on('up', (info: LoupedeckControlInfo) => {\n\t\tappendLog(`${info.type}-${info.index} up`)\n\t\tcurrentDemo.controlUp(device, info).catch(console.error)\n\t})\n\tdevice.on('rotate', (info: LoupedeckControlInfo, delta) => {\n\t\tappendLog(`${info.type}-${info.index} rotate ${delta}`)\n\t\tcurrentDemo.controlRotate(device, info, delta).catch(console.error)\n\t})\n\tdevice.on('touchstart', (evt: LoupedeckTouchEventData) => {\n\t\tappendLog(`Touch start ${JSON.stringify(evt)}`)\n\t\tcurrentDemo.touchStart(device, evt).catch(console.error)\n\t})\n\tdevice.on('touchmove', (evt: LoupedeckTouchEventData) => {\n\t\tappendLog(`Touch move ${JSON.stringify(evt)}`)\n\t\tcurrentDemo.touchMove(device, evt).catch(console.error)\n\t})\n\tdevice.on('touchend', (evt: LoupedeckTouchEventData) => {\n\t\tappendLog(`Touch end ${JSON.stringify(evt)}`)\n\t\tcurrentDemo.touchEnd(device, evt).catch(console.error)\n\t})\n\n\tawait currentDemo.start(device)\n\n\t// Sample actions\n\tawait device.setBrightness(70)\n\n\t// device.fillColor(2, 255, 0, 0)\n\t// device.fillColor(12, 0, 0, 255)\n}\n\nif (consentButton) {\n\tconst doLoad = async () => {\n\t\t// attempt to open a previously selected device.\n\t\tconst devices = await getLoupedecks()\n\t\tif (devices.length > 0) {\n\t\t\tdevice = devices[0]\n\t\t\topenDevice(device).catch(console.error)\n\t\t}\n\t\tconsole.log(devices)\n\t}\n\twindow.addEventListener('load', () => {\n\t\tdoLoad().catch((e) => console.error(e))\n\t})\n\n\tconst brightnessRange = document.getElementById('brightness-range') as HTMLInputElement | undefined\n\tif (brightnessRange) {\n\t\tbrightnessRange.addEventListener('input', (_e) => {\n\t\t\tconst value = brightnessRange.value as any as number\n\t\t\tif (device) {\n\t\t\t\tdevice.setBrightness(value / 100).catch(console.error)\n\t\t\t}\n\t\t})\n\t}\n\n\tif (demoSelect) {\n\t\tdemoSelect.addEventListener('input', () => {\n\t\t\tdemoChange().catch(console.error)\n\t\t})\n\t\tdemoChange().catch(console.error)\n\t}\n\n\tconst consentClick = async () => {\n\t\tif (device) {\n\t\t\tappendLog('Closing device')\n\t\t\tcurrentDemo.stop(device).catch(console.error)\n\t\t\tawait device.close()\n\t\t\tdevice = null\n\t\t}\n\t\t// Prompt for a device\n\t\ttry {\n\t\t\tdevice = await requestLoupedeck()\n\t\t} catch (error) {\n\t\t\tappendLog(`No device access granted: ${error as string}`)\n\t\t\treturn\n\t\t}\n\n\t\topenDevice(device).catch(console.error)\n\t}\n\tconsentButton.addEventListener('click', () => {\n\t\tconsentClick().catch((e) => console.error(e))\n\t})\n\n\tappendLog('Page loaded')\n}\n"],"names":[],"sourceRoot":""}